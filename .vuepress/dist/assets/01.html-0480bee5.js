import{_ as t,o as r,c as p,a as s}from"./app-96369fff.js";const n="/assets/20231215145810-2ebd1d4f.png",o={},e=s('<h2 id="typescript-是什么" tabindex="-1"><a class="header-anchor" href="#typescript-是什么" aria-hidden="true">#</a> TypeScript 是什么</h2><p><img src="'+n+'" alt=""></p><p><strong>TypeScript</strong>（简称：TS）是 JavaScript 的<strong>超集</strong>（JS 有的 TS 都有）。</p><p>TypeScript = <strong>Type</strong> + JavaScript（在 JS 基础之上，为 JS 添加了<strong>类型支持</strong>）。</p><p>TypeScript 是微软开发的开源编程语言，可以在任何运行 JavaScript 的地方运行。</p><h2 id="typescript-为什么要为-js-添加类型支持" tabindex="-1"><a class="header-anchor" href="#typescript-为什么要为-js-添加类型支持" aria-hidden="true">#</a> TypeScript 为什么要为 JS 添加类型支持？</h2><p>背景：JS 的类型系统存在“先天缺陷”，JS 代码中绝大部分错误都是<strong>类型</strong>错误（Uncaught <strong>Type</strong>Error）。</p><p>问题：增加了找 Bug、改 Bug 的时间，严重影响开发效率。</p><p>从编程语言的动静来区分，TypeScript 属于静态类型的编程语言，JS 属于动态类型的编程语言。</p><p>静态类型：编译期做类型检查； 动态类型：执行期做类型检查。</p><p>代码编译和代码执行的顺序：1 编译 2 执行。</p><p>对于 JS 来说：需要等到代码真正去<strong>执行</strong>的时候才能发现<strong>错误</strong>（晚）。</p><p>对于 TS 来说：在代码<strong>编译</strong>的时候（代码执行前）就可以<strong>发现错误</strong>（早）。</p><p>并且，配合 VSCode 等开发工具，TS 可以<strong>提前到在编写代码的同时</strong>就发现代码中的错误，<strong>减少找 Bug、改 Bug 时间</strong>。</p><h2 id="typescript-相比-js-的优势" tabindex="-1"><a class="header-anchor" href="#typescript-相比-js-的优势" aria-hidden="true">#</a> TypeScript 相比 JS 的优势</h2><ol><li><p>更早（写代码的同时）发现错误，<strong>减少找 Bug、改 Bug 时间</strong>，提升开发效率。</p></li><li><p>程序中任何位置的代码都有<strong>代码提示</strong>，随时随地的安全感，增强了开发体验。</p></li><li><p>强大的<strong>类型系统</strong>提升了代码的可维护性，使得<strong>重构代码更加容易</strong>。</p></li><li><p>支持<strong>最新的 ECMAScript 语法</strong>，优先体验最新的语法，让你走在前端技术的最前沿。</p></li><li><p>TS <strong>类型推断</strong>机制，<strong>不需要</strong>在代码中的<strong>每个地方都显示标注类型</strong>，让你在享受优势的同时，尽量降低了成本。</p></li></ol><p>除此之外，Vue 3 源码使用 TS 重写、Angular 默认支持 TS、React 与 TS 完美配合，TypeScript 已成为大中型前端 项目的首先编程语言。</p>',17),g=[e];function i(a,c){return r(),p("div",null,g)}const l=t(o,[["render",i],["__file","01.html.vue"]]);export{l as default};
