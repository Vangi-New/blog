import{_ as t,r as o,o as i,c as r,b as n,e,d as c,a as s}from"./app-3fbdf476.js";const d={},l=n("h2",{id:"_1-windows下安装docker",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-windows下安装docker","aria-hidden":"true"},"#"),e(" 1.Windows下安装Docker")],-1),p=n("div",{class:"custom-container warning"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8v4"}),n("path",{d:"M12 16h.01"})])]),n("p",{class:"custom-container-title"},"注意事项"),n("p",null,"容器主要使用linux内核技术，因此Windows下安装docker可能会有遇到各种问题，建议刚入门的同学先在linux虚拟机里安装docker，学完之后在windows下安装，免得遇到问题后，还没入门就放弃了。")],-1),u=n("ul",null,[n("li",null,[n("strong",null,"Docker Engine")])],-1),k=n("p",null,"​ 我们通常所说的docker，是指Docker Engine，它是一种容器化技术，用于创建和运行容器。",-1),h=n("ul",null,[n("li",null,[n("strong",null,"Docker Desktop")])],-1),m=n("p",null,"​ Docker Desktop是一个用于操作docker的GUI图形界面化工具，它包含Docker Engine。",-1),v=n("h3",{id:"_1-1-系统版本要求",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-1-系统版本要求","aria-hidden":"true"},"#"),e(" 1.1 系统版本要求")],-1),b=n("div",{class:"custom-container warning"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8v4"}),n("path",{d:"M12 16h.01"})])]),n("p",{class:"custom-container-title"},"注意事项"),n("p",null,"如果是Windows 7、Windows8 用户，推荐在虚拟机中安装docker。")],-1),g=s(`<p>在PowerShell中使用<code>winver</code>命令查看系统版本</p><ul><li>Windows 11</li><li>Windows 10 21H1 或更高版本</li></ul><h3 id="_1-2-必要条件" tabindex="-1"><a class="header-anchor" href="#_1-2-必要条件" aria-hidden="true">#</a> 1.2 必要条件</h3><p>1 在“任务管理器”的“性能”选项里查看虚拟化是否启用。如果没有，需要在BIOS中开启。</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/28915315/1660567166974-9b4a977f-ac9e-4d69-b66f-01351ecc1fb3.png" alt="img"></p><p>2 安装“虚拟机平台”和 WSL</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/28915315/1673400408225-c66c1541-66c1-43fb-9e2d-889c0ec2c181.png" alt="img"> 或者以管理员身份运行以下命令：</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code><span class="token function">Enable-WindowsOptionalFeature</span> <span class="token operator">-</span>Online <span class="token operator">-</span>FeatureName VirtualMachinePlatform <span class="token operator">-</span>All <span class="token operator">-</span>NoRestart
<span class="token function">Enable-WindowsOptionalFeature</span> <span class="token operator">-</span>Online <span class="token operator">-</span>FeatureName Microsoft-Windows-Subsystem-Linux <span class="token operator">-</span>All <span class="token operator">-</span>NoRestart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>3 设置Hypervisor开机自动启动</p><p>一些程序（例如旧版本的Virtual Box或某些游戏）会禁用Hypervisor自动启动，可能会docker无法正常运行。</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>bcdedit <span class="token operator">/</span><span class="token function">set</span> hypervisorlaunchtype auto
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>4 安装WSL2内核更新包</p>`,12),w={href:"https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi",target:"_blank",rel:"noopener noreferrer"},x=n("li",null,"或者直接在windows的微软商店里面下载Ubantu的长期支持版",-1),f=s(`<p>5 将 WSL 2 设置为默认版本</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>wsl <span class="token operator">--</span><span class="token function">set-default</span><span class="token operator">-</span>version 2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>重启系统。</p><h3 id="_1-3-安装docker-desktop" tabindex="-1"><a class="header-anchor" href="#_1-3-安装docker-desktop" aria-hidden="true">#</a> 1.3 安装Docker Desktop</h3><p>下载[Docker Desktop for Windows](https://desktop.docker.com/win/main/amd64/Docker Desktop Installer.exe)进行安装。出现以下界面，安装成功。</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/28915315/1660567962026-9ecb1833-e79e-4c2d-bbb8-1bfd84b29485.png" alt="img"></p><h3 id="_1-4-配置镜像站" tabindex="-1"><a class="header-anchor" href="#_1-4-配置镜像站" aria-hidden="true">#</a> 1.4 配置镜像站</h3><p>由于访问docker hub网络比较慢，因此需要配置国内的容器仓库镜像站。</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/28915315/1660568207471-a6449e68-af4e-4cc7-b7dc-4f333db80310.png?x-oss-process=image%2Fformat%2Cwebp" alt="mirrors.png"></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;builder&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;gc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;defaultKeepStorage&quot;</span><span class="token operator">:</span> <span class="token string">&quot;20GB&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;enabled&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;experimental&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">&quot;features&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;buildkit&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;registry-mirrors&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;https://reg-mirror.qiniu.com/&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;https://docker.mirrors.ustc.edu.cn/&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;https://hub-mirror.c.163.com/&quot;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-5-注意事项" tabindex="-1"><a class="header-anchor" href="#_1-5-注意事项" aria-hidden="true">#</a> 1.5 注意事项</h3><ul><li>挂载路径</li></ul><blockquote><p>注意：windows下路径使用<code>\\</code>作为分割符</p></blockquote><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker run --rm -it -v D:\\docker\\data1:/work1 alpine
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者采用linux路径写法</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker run --rm -it -v /D/docker/data2:/work2 alpine
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>dockerfile换行符</li></ul><p>‎Docker 容器基于Linux运行环境，容器内文件必须使用 linux 样式的换行符 <code>\\n</code>，不能使用windows换行符<code>\\r\\n</code>。</p><p>例如dockerfile文件，windows下的一些工具会默认使用windows换行符，可能导致这些文件在容器中显示语法错误。</p><h2 id="_2-linux下安装docker" tabindex="-1"><a class="header-anchor" href="#_2-linux下安装docker" aria-hidden="true">#</a> 2.linux下安装Docker</h2><p>安装环境：CentOS 7.3+</p><h3 id="如果之前安装了旧版docker-请先删除。" tabindex="-1"><a class="header-anchor" href="#如果之前安装了旧版docker-请先删除。" aria-hidden="true">#</a> 如果之前安装了旧版docker，请先删除。</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum remove <span class="token function">docker</span> <span class="token punctuation">\\</span>
                  docker-client <span class="token punctuation">\\</span>
                  docker-client-latest <span class="token punctuation">\\</span>
                  docker-common <span class="token punctuation">\\</span>
                  docker-latest <span class="token punctuation">\\</span>
                  docker-latest-logrotate <span class="token punctuation">\\</span>
                  docker-logrotate <span class="token punctuation">\\</span>
                  docker-engine
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="安装仓库" tabindex="-1"><a class="header-anchor" href="#安装仓库" aria-hidden="true">#</a> 安装仓库</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum <span class="token function">install</span> <span class="token parameter variable">-y</span> yum-utils

<span class="token function">sudo</span> yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="安装docker-engine" tabindex="-1"><a class="header-anchor" href="#安装docker-engine" aria-hidden="true">#</a> 安装docker engine</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum <span class="token function">install</span> docker-ce docker-ce-cli containerd.io docker-compose-plugin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>docker-ce</code>：服务端</p><p><code>docker-ce-cli</code>：客户端</p><p>客户端发出的指令交给服务端，服务端并不直接创建容器，而是交给 <code>containerd.in</code> 创建容器，销毁运行容器</p><p><code>docker-compose-plugin</code>：容器编排工具</p><h3 id="启动docker-运行hello-world查看是否成功" tabindex="-1"><a class="header-anchor" href="#启动docker-运行hello-world查看是否成功" aria-hidden="true">#</a> 启动docker，运行hello world查看是否成功</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl start <span class="token function">docker</span>
<span class="token function">sudo</span> <span class="token function">docker</span> run hello-world
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置国内镜像仓库地址" tabindex="-1"><a class="header-anchor" href="#配置国内镜像仓库地址" aria-hidden="true">#</a> 配置国内镜像仓库地址：</h3><p>新建<code>/etc/docker/daemon.json</code>文件，输入如下内容：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;registry-mirrors&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;https://registry.docker-cn.com&quot;</span>,
    <span class="token string">&quot;http://hub-mirror.c.163.com&quot;</span>,
    <span class="token string">&quot;https://fsp2sfpr.mirror.aliyuncs.com/&quot;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后重启，配置开机启动</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl restart <span class="token function">docker</span>
<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> <span class="token function">docker</span>
<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> containerd
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="镜像加速源" tabindex="-1"><a class="header-anchor" href="#镜像加速源" aria-hidden="true">#</a> 镜像加速源</h2><table><thead><tr><th>镜像加速器</th><th>镜像加速器地址</th></tr></thead><tbody><tr><td>Docker 中国官方镜像</td><td>https://registry.docker-cn.com</td></tr><tr><td>DaoCloud 镜像站</td><td>http://f1361db2.m.daocloud.io</td></tr><tr><td>Azure 中国镜像</td><td>https://dockerhub.azk8s.cn</td></tr><tr><td>科大镜像站</td><td>https://docker.mirrors.ustc.edu.cn</td></tr><tr><td>阿里云</td><td>https://ud6340vz.mirror.aliyuncs.com</td></tr><tr><td>七牛云</td><td>https://reg-mirror.qiniu.com</td></tr><tr><td>网易云</td><td>https://hub-mirror.c.163.com</td></tr><tr><td>腾讯云</td><td>https://mirror.ccs.tencentyun.com</td></tr></tbody></table><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&quot;registry-mirrors&quot;: [&quot;https://registry.docker-cn.com&quot;]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://cos.easydoc.net/46901064/files/l25jdwrn.png" alt="1.png"></p>`,42);function _(q,y){const a=o("ExternalLinkIcon");return i(),r("div",null,[l,p,u,k,h,m,v,b,g,n("ul",null,[n("li",null,[n("a",w,[e("适用于 x64 计算机的 WSL2 Linux 内核更新包"),c(a)])]),x]),f])}const W=t(d,[["render",_],["__file","02.html.vue"]]);export{W as default};
