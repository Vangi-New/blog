import{_ as p,r as o,o as l,c,b as n,e as s,d as t,a as e}from"./app-6c7fecab.js";const i={},u=e('<h2 id="问-uni-app-组件库的解决方案-xx-分钟" tabindex="-1"><a class="header-anchor" href="#问-uni-app-组件库的解决方案-xx-分钟" aria-hidden="true">#</a> 问：uni-app 组件库的解决方案？（xx 分钟）</h2><h3 id="必答" tabindex="-1"><a class="header-anchor" href="#必答" aria-hidden="true">#</a> 必答</h3><p>（总）我们项目使用的是 <code>uni-ui</code> 组件库，这是官方出品的组件库，有官方的技术支持和持续维护并且 uni-ui 组件库比较相对精简，组件自动按需导入，有利于减小项目体积。</p><p>（分）两个核心步骤是：</p><ol><li>安装 <code>@dcloudio/uni-ui</code>(组件库) 和 <code>scss</code>。</li><li>在 <code>pages.json</code> 文件中配置 <code>easycom</code> 规则，实现 <code>uni-ui</code> 组件的自动导入和注册。</li></ol><h3 id="加分" tabindex="-1"><a class="header-anchor" href="#加分" aria-hidden="true">#</a> 加分</h3><p>虽然 <code>uni-ui</code>官方并没有类型声明文件，但我们在项目中还配置了 <code>uni-ui</code> 的 <code>TS</code> 组件类型支持，可以校验组件的属性，类型更安全，书写时也有代码提示。</p><p>实现类型支持其实也就多了两个步骤：</p><ol><li>安装 <code>@uni-helper/uni-ui-type</code> 第三方类型声明文件。</li><li>再配置 <code>tsconfig.json</code>，将类型声明文件添加到 <code>types</code> 数组就可以了。</li></ol><h3 id="深入" tabindex="-1"><a class="header-anchor" href="#深入" aria-hidden="true">#</a> 深入</h3>',10),r=n("div",{class:"custom-container tip"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8h.01"}),n("path",{d:"M11 12h1v4h1"})])]),n("p",{class:"custom-container-title"},"TIP"),n("p",null,[s("准备充分的同学，可以自己"),n("strong",null,"融入加分回答中"),s("，或者"),n("strong",null,"引导面试官往自己准备的方向提问"),s("。")])],-1),k=n("code",null,"uni-app",-1),d=n("code",null,"uni-ui",-1),v=n("strong",null,"效率太低了",-1),m=n("code",null,"uni-helper",-1),g={href:"https://github.com/uni-helper/uni-ui-types/issues?q=is%3Aissue+is%3Aclosed",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/uni-helper/uni-ui-types",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/uni-helper/uni-ui-types/issues?q=is%3Aissue+is%3Aclosed",target:"_blank",rel:"noopener noreferrer"},f=e('<h3 id="再深入" tabindex="-1"><a class="header-anchor" href="#再深入" aria-hidden="true">#</a> 再深入</h3><ul><li>❓ 问: 为什么项目中使用 <code>uni-ui</code> 而不选择 <code>uview-ui</code>。</li><li>🙋‍♂️ 答: 我们团队主要是考虑以下三点做出的选择： <ol><li><code>uni-ui</code> 是官方出品的组件库，<strong>有官方的技术支持和持续维护</strong>(最重要)。</li><li><code>uni-ui</code> 比较相对精简，有利于减小项目体积。</li><li><code>uview-ui</code> 暂不支持 <code>Vue3</code> 开发，稍微落后。</li></ol></li></ul><p>当然 <code>uview-ui</code> 组件库也不错，是目前 <code>uni-app</code> 插件市场下载量最高的第三方 Vue2 组件库，社区中也有热心的小伙伴为 <code>uview-ui</code> 做了 Vue3 版，但目前可能作者太忙了，处于没更新状态，不稳定，所以综合考虑，我们选择官方维护的 <code>uni-ui</code>。</p><h3 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接" aria-hidden="true">#</a> 参考链接</h3>',4),y={href:"https://uniapp.dcloud.net.cn/component/uniui/quickstart.html",target:"_blank",rel:"noopener noreferrer"},w={href:"https://www.uviewui.com/",target:"_blank",rel:"noopener noreferrer"},_={href:"https://gitee.com/vk-uni/vk-uview-ui",target:"_blank",rel:"noopener noreferrer"},q={href:"https://github.com/uni-helper",target:"_blank",rel:"noopener noreferrer"},x={href:"https://github.com/uni-helper/uni-ui-types",target:"_blank",rel:"noopener noreferrer"},S={href:"https://marketplace.visualstudio.com/items?itemName=uni-helper.uni-app-snippets-vscode",target:"_blank",rel:"noopener noreferrer"},E={href:"https://github.com/umicro/uView2.0/issues/700",target:"_blank",rel:"noopener noreferrer"},A=n("div",{class:"custom-container tip"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8h.01"}),n("path",{d:"M11 12h1v4h1"})])]),n("p",{class:"custom-container-title"},"类似问题"),n("ul",null,[n("li",null,"如何在 uni-app 中引入和使用第三方组件库？"),n("li",null,"请介绍几个常用的 uni-app 组件库，以及它们的特点和使用场景？"),n("li",null,"组件库的 TS 类型怎么处理？")])],-1),P=e('<h2 id="问-在-uni-app-中-如何进行全局状态管理-请介绍一下你对-vuex-和-pinia-的了解。" tabindex="-1"><a class="header-anchor" href="#问-在-uni-app-中-如何进行全局状态管理-请介绍一下你对-vuex-和-pinia-的了解。" aria-hidden="true">#</a> 问：在 uni-app 中，如何进行全局状态管理？请介绍一下你对 Vuex 和 Pinia 的了解。</h2><h3 id="必答-1" tabindex="-1"><a class="header-anchor" href="#必答-1" aria-hidden="true">#</a> 必答</h3><p>（总）我们项目使用的是 Pinia 进行全局状态管理，Vuex 或 Pinia 都是官方提供的状态管理库。</p><p>（分）我先说一下我对 VueX 的了解： Vuex 采用单一状态树的概念，将全局状态集中管理，方便追踪状态变化。Vuex 主要包含以下几个核心概念：</p><ul><li>State：用于存储全局状态。</li><li>Getter：用于从 State 中派生出一些状态，例如计算属性。</li><li>Mutation：用于同步修改 State，严格遵循单向数据流。</li><li>Action：用于异步操作，可以包含异步 API 请求、异步提交 Mutation 等。</li></ul>',5),j={href:"https://pinia.vuejs.org/zh/introduction.html#comparison-with-vuex",target:"_blank",rel:"noopener noreferrer"},V=n("strong",null,"轻量级的、兼容 Vue 3 和 Vue 2 的状态管理库",-1),C=n("strong",null,"废弃了",-1),H=n("strong",null,"极其冗余的 mutation",-1),B=n("ul",null,[n("li",null,"Store：用于存储全局状态和处理状态变化的方法，类似于 Vuex 的 State、Getter 和 Action 的集合。"),n("li",null,"可以创建和使用多个 Store 实例，每个 Store 都有自己独立的状态和方法。")],-1),I=n("p",null,"（总）所以我们项目最终选择的是 Pinia 进行全局状态管理。",-1),T=n("h3",{id:"加分-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#加分-1","aria-hidden":"true"},"#"),s(" 加分")],-1),L=n("p",null,"（总）其实我们的项目还配置了 pinia 的持久化存储方案。",-1),M={href:"https://github.com/prazdevs/pinia-plugin-persistedstate",target:"_blank",rel:"noopener noreferrer"},N={href:"https://www.npmjs.com/package/pinia-plugin-persistedstate",target:"_blank",rel:"noopener noreferrer"},D={href:"https://prazdevs.github.io/pinia-plugin-persistedstate/zh/guide/config.html#storage",target:"_blank",rel:"noopener noreferrer"},U=n("code",null,"uni-app",-1),R=n("code",null,"uni.setStorageSync()",-1),O=n("code",null,"uni.getStorageSync()",-1),z=e(`<p>（总）持久化存储配置完成后，就会自动将用户数据保存在客户端，即使用户关闭了小程序，数据依然可以保留。</p><p>配置参考</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// stores/modules/member.ts</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> useMemberStore <span class="token operator">=</span> <span class="token function">defineStore</span><span class="token punctuation">(</span>
  <span class="token string">&#39;member&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">//…省略</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token comment">// 配置持久化</span>
    persist<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// 调整为兼容多端的API</span>
      storage<span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token function">setItem</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          uni<span class="token punctuation">.</span><span class="token function">setStorageSync</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span> 
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function">getItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> uni<span class="token punctuation">.</span><span class="token function">getStorageSync</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> 
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="参考链接-1" tabindex="-1"><a class="header-anchor" href="#参考链接-1" aria-hidden="true">#</a> 参考链接</h3>`,4),F={href:"https://vuex.vuejs.org/zh/",target:"_blank",rel:"noopener noreferrer"},G={href:"https://pinia.vuejs.org/zh/introduction.html",target:"_blank",rel:"noopener noreferrer"},W={href:"https://pinia.vuejs.org/zh/introduction.html#comparison-with-vuex-3-x-4-x",target:"_blank",rel:"noopener noreferrer"},X={href:"https://prazdevs.github.io/pinia-plugin-persistedstate/zh/guide/config.html#storage",target:"_blank",rel:"noopener noreferrer"},J=n("div",{class:"custom-container tip"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8h.01"}),n("path",{d:"M11 12h1v4h1"})])]),n("p",{class:"custom-container-title"},"类似问题"),n("ul",null,[n("li",null,"在 uni-app 中如何实现全局状态管理？"),n("li",null,"在 uni-app 中如何实现持久化存储？")])],-1),K=e(`<h2 id="问-uni-app-中的组件和-vue-js-中的组件有什么区别" tabindex="-1"><a class="header-anchor" href="#问-uni-app-中的组件和-vue-js-中的组件有什么区别" aria-hidden="true">#</a> 问：uni-app 中的组件和 Vue.js 中的组件有什么区别？</h2><h3 id="必答-2" tabindex="-1"><a class="header-anchor" href="#必答-2" aria-hidden="true">#</a> 必答</h3><p>（总）uni-app 是基于 Vue.js 构建的跨平台开发框架，因此 <strong>uni-app 中的组件与 Vue.js 中的组件在很多方面是相似的</strong>。然而，由于 uni-app 需要支持多个平台，包括微信小程序、App 端和 H5 端，所以在某些方面会有一些差异。</p><p>（分）<strong>根据自身理解，选其中几点回答即可：</strong></p><p>以下是 uni-app 中的组件与 Vue.js 中的组件的一些主要区别：</p><ol><li>跨平台：Vue.js 主要用于开发网页应用，而 uni-app 可以让你用同一套代码开发微信小程序、App、H5 等多个平台的应用。</li><li>基础组件：uni-app 提供了一套与 Vue.js 不同的基础组件。这些组件是为了适应不同平台的 UI 要求而设计的，它们在微信小程序、App 端和 H5 端上有统一的表现。在使用这些组件时，需要注意它们在不同平台之间的差异，封装自定义组件的时候更推荐 <code>&lt;view&gt;</code>、<code>&lt;text&gt;</code> 等基础组件，而非 <code>&lt;div&gt;</code>、<code>&lt;span&gt;</code>。</li><li>生命周期：虽然 uni-app 和 Vue.js 的组件都有生命周期钩子，但是 uni-app 为了适应不同平台而引入了一些额外的生命周期钩子，例如 <strong>onLaunch</strong>、<strong>onShow</strong> 和 <strong>onHide</strong>。</li><li>样式差异：某些 CSS 选择器不受支持如 <code>*</code> 通配符选择器。此外，uni-app 支持一种叫做 <strong>rpx</strong> 的相对单位，它可以自动适应不同屏幕尺寸。</li><li>条件编译：由于 uni-app 支持多个平台，所以提供了条件编译功能。开发者可以通过条件编译在特定平台上使用平台特有的 API 或组件，从而实现平台相关的功能。</li></ol><p>（总）总的来说，uni-app 和 Vue.js 的组件在很多方面是相似的，但是由于 uni-app 需要支持多个平台，所以在一些细节上会有所区别，平时开发时要注意平台相关的组件、生命周期、样式的差异。</p><h3 id="加分-2" tabindex="-1"><a class="header-anchor" href="#加分-2" aria-hidden="true">#</a> 加分</h3><p>可以展开 uni-app 生命周期，分为三部分：</p><ul><li>应用生命周期：与 <strong>小程序</strong> 应用的生命周期一致（onLaunch、onShow、onHide 等）</li><li>页面生命周期：与 <strong>小程序</strong> 页面的生命周期一致（onLoad、onUnload、onShow 等）</li><li>组件生命周期：与 <strong>Vue.js</strong> 组件的生命周期一致（mounted、created 等）</li></ul><p>我们的购物车页面需要借助 <strong>onShow</strong> 生命周期钩子获取最新的购物车列表数据，因为在商品详情页中进行添加购物车操作。添加成功后，打开购物车页面应展示最新的购物车数据。因此，每次 <strong>购物车页面 onShow</strong> 时，都应获取最新的购物车列表数据。收货地址列表页同理。</p><h3 id="深入-1" tabindex="-1"><a class="header-anchor" href="#深入-1" aria-hidden="true">#</a> 深入</h3><p>（总）小程序是一个独立的应用平台，有自己的一套生命周期，如 onLaunch、onShow、onHide，在 uni-app 项目还支持 Vue 的生命周期钩子。</p><p>（分）</p><ul><li><code>onLaunch</code> 生命周期钩子在 App.vue 根组件中就类似 <code>created</code> 或 <code>mounted</code> 钩子。</li><li><code>Vue.js</code> 本身并没有提供 <code>onShow</code> 和 <code>onHide</code> 生命周期钩子，但是可以通过监听页面的 <code>visibilitychange</code> 事件来模拟实现这两个钩子。从而在一定程度上模拟 onShow 和 onHide 的行为。</li></ul><p>（总）我们的 uni-app 项目主要是做小程序端，所以我们的<strong>页面组件优先使用小程序的生命周期钩子</strong>，也就是 onShow、onHide 这些，普通组件就用 Vue 生命周期钩子。</p><p><strong>参考代码</strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;visibilitychange&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handleVisibilityChange<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token function">beforeDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  document<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;visibilitychange&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handleVisibilityChange<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
methods<span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token function">handleVisibilityChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>hidden<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onHide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onShow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onShow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;页面显示&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onHide</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;页面隐藏&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样，当页面变为隐藏状态时，<strong>onHide</strong> 方法会被调用；当页面重新显示时，<strong>onShow</strong> 方法会被调用。</p><p>注意，在组件销毁时，要记得移除 <strong>visibilitychange</strong> 事件监听，以避免内存泄漏。</p><h3 id="参考链接-2" tabindex="-1"><a class="header-anchor" href="#参考链接-2" aria-hidden="true">#</a> 参考链接</h3>`,21),Q={href:"https://uniapp.dcloud.net.cn/collocation/App.html#applifecycle",target:"_blank",rel:"noopener noreferrer"},$={href:"https://uniapp.dcloud.net.cn/tutorial/page.html#lifecycle",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://uniapp.dcloud.net.cn/tutorial/page.html#componentlifecycle",target:"_blank",rel:"noopener noreferrer"},Z={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Document/visibilitychange_event",target:"_blank",rel:"noopener noreferrer"},nn=n("div",{class:"custom-container tip"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8h.01"}),n("path",{d:"M11 12h1v4h1"})])]),n("p",{class:"custom-container-title"},"类似问题"),n("ul",null,[n("li",null,"uni-app 与 Vue 区别？"),n("li",null,"在 uni-app 中实现自定义组件，有什么区别吗？"),n("li",null,"在 uni-app 中如何处理 CSS 样式的差异？"),n("li",null,"请介绍 uni-app 的生命周期函数，以及它们在不同平台下的差异。"),n("li",null,"谈谈 uni-app 组件的生命周期，以及它们与 Vue.js 组件生命周期的异同。"),n("li",null,"如何实现 uni-app 中的跨平台开发？请谈谈 uni-app 的条件编译。")])],-1),sn=e(`<h2 id="问-请介绍一下-uni-app-的网络请求库-uni-request-与-axios-相比-它有哪些优缺点" tabindex="-1"><a class="header-anchor" href="#问-请介绍一下-uni-app-的网络请求库-uni-request-与-axios-相比-它有哪些优缺点" aria-hidden="true">#</a> 问：请介绍一下 uni-app 的网络请求库 uni.request 与 axios 相比，它有哪些优缺点？</h2><h3 id="必答-3" tabindex="-1"><a class="header-anchor" href="#必答-3" aria-hidden="true">#</a> 必答</h3><p>（总）uni-app 的 <code>uni.request</code> 是一个用于发起网络请求的 API。它是 uni-app 框架内置的网络请求库，兼容多端（包括小程序、App、H5 等），无需额外安装。使用 <code>uni.request</code> 可以发起 GET、POST、PUT、DELETE 等 HTTP 请求。</p><p>（分）与 axios 相比，<code>uni.request</code> 的优缺点如下：</p><p>优点：</p><ol><li>内置于 uni-app 框架，不需要额外安装和引入第三方库。</li><li>兼容多端，可以方便地在不同平台上使用。</li></ol><p>缺点：</p><ol><li>功能相对于 axios 较为简单，缺少一些高级功能，例如拦截器需要自己实现。</li><li>错误处理不如 axios 完善。axios 可以轻松区分网络错误和业务错误，而在 <code>uni.request</code> 中需要手动判断状态码。</li></ol><p>（总）其实在我们的项目中也借鉴 axios 的思想，基于 <code>uni.request</code> 封装了自己的网络请求库，可以用于处理常见的请求场景。</p><h3 id="加分-3" tabindex="-1"><a class="header-anchor" href="#加分-3" aria-hidden="true">#</a> 加分</h3><p>（总）我们自己实现了一个基于 uni-app 的网络请求库。通过添加拦截器，实现了对请求前处理和请求后的处理，提高了代码的复用性。</p><p>（分）具体来说，代码实现了以下功能：</p><ol><li>添加拦截器：拦截 <code>request</code> 请求和 <code>uploadFile</code> 文件上传。</li><li>非 <code>http</code> 开头的请求 URL 自动拼接基础地址 <code>baseURL</code>。</li><li>如果存在 token，则将其添加到请求头 <code>Authorization</code>。</li><li>封装了一个 <code>http</code> 函数，该函数返回一个 Promise 对象，支持泛型，方便处理返回数据的类型。</li><li>当请求成功时（状态码为 2xx），执行 <code>resolve()</code> 表示成功，并提取核心数据<code>res.data</code>。</li><li>当请求失败时： <ul><li>如果状态码为 401，则清除用户信息并跳转到登录页面。</li><li>如果是其他错误，则根据后端错误信息进行提示。</li><li>如果是网络错误，则提示用户更换网络。</li></ul></li></ol><p>（总）我们借鉴 axios 的思想，基于 <code>uni.request</code> 封装了自己的网络请求库，可以用于处理常见的请求场景。</p><p><strong>参考代码</strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useMemberStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/stores&#39;</span>

<span class="token comment">// 服务器基地址</span>
<span class="token keyword">const</span> baseURL <span class="token operator">=</span> <span class="token string">&#39;https://pcapi-xiaotuxian-front-devtest.itheima.net&#39;</span>

<span class="token comment">// 添加拦截器</span>
<span class="token keyword">const</span> httpInterceptor <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// 拦截前触发</span>
  <span class="token function">invoke</span><span class="token punctuation">(</span>options<span class="token operator">:</span> UniApp<span class="token punctuation">.</span>RequestOptions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1. 非 http 开头需拼接地址</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>options<span class="token punctuation">.</span>url<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      options<span class="token punctuation">.</span>url <span class="token operator">=</span> baseURL <span class="token operator">+</span> options<span class="token punctuation">.</span>url
    <span class="token punctuation">}</span>
    <span class="token comment">// 2. 请求超时, 默认 60s</span>
    options<span class="token punctuation">.</span>timeout <span class="token operator">=</span> <span class="token number">10000</span>
    <span class="token comment">// 3. 添加小程序端请求头标识</span>
    options<span class="token punctuation">.</span>header <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token operator">...</span>options<span class="token punctuation">.</span>header<span class="token punctuation">,</span>
      <span class="token string-property property">&#39;source-client&#39;</span><span class="token operator">:</span> <span class="token string">&#39;miniapp&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 4. 添加 token 请求头标识</span>
    <span class="token keyword">const</span> memberStore <span class="token operator">=</span> <span class="token function">useMemberStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> token <span class="token operator">=</span> memberStore<span class="token punctuation">.</span>profile<span class="token operator">?.</span>token
    <span class="token keyword">if</span> <span class="token punctuation">(</span>token<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      options<span class="token punctuation">.</span>header<span class="token punctuation">.</span>Authorization <span class="token operator">=</span> token
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">// 添加拦截器</span>
uni<span class="token punctuation">.</span><span class="token function">addInterceptor</span><span class="token punctuation">(</span><span class="token string">&#39;request&#39;</span><span class="token punctuation">,</span> httpInterceptor<span class="token punctuation">)</span>
uni<span class="token punctuation">.</span><span class="token function">addInterceptor</span><span class="token punctuation">(</span><span class="token string">&#39;uploadFile&#39;</span><span class="token punctuation">,</span> httpInterceptor<span class="token punctuation">)</span>

<span class="token keyword">type</span> <span class="token class-name">Data<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  code<span class="token operator">:</span> <span class="token builtin">string</span>
  msg<span class="token operator">:</span> <span class="token builtin">string</span>
  result<span class="token operator">:</span> <span class="token constant">T</span>
<span class="token punctuation">}</span>
<span class="token comment">// 2.2 添加类型，支持泛型</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>options<span class="token operator">:</span> UniApp<span class="token punctuation">.</span>RequestOptions<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 1. 返回 Promise 对象</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span><span class="token operator">&lt;</span>Data<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    uni<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token operator">...</span>options<span class="token punctuation">,</span>
      <span class="token comment">// 响应成功</span>
      <span class="token function">success</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 状态码 2xx， axios 就是这样设计的</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>statusCode <span class="token operator">&gt;=</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> res<span class="token punctuation">.</span>statusCode <span class="token operator">&lt;</span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// 2.1 提取核心数据 res.data</span>
          <span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data <span class="token keyword">as</span> Data<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>statusCode <span class="token operator">===</span> <span class="token number">401</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// 401错误  -&gt; 清理用户信息，跳转到登录页</span>
          <span class="token keyword">const</span> memberStore <span class="token operator">=</span> <span class="token function">useMemberStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          memberStore<span class="token punctuation">.</span><span class="token function">clearProfile</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          uni<span class="token punctuation">.</span><span class="token function">navigateTo</span><span class="token punctuation">(</span><span class="token punctuation">{</span> url<span class="token operator">:</span> <span class="token string">&#39;/pages/login/login&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
          <span class="token function">reject</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token comment">// 其他错误 -&gt; 根据后端错误信息轻提示</span>
          uni<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            icon<span class="token operator">:</span> <span class="token string">&#39;none&#39;</span><span class="token punctuation">,</span>
            title<span class="token operator">:</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>data <span class="token keyword">as</span> Data<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>msg <span class="token operator">||</span> <span class="token string">&#39;请求错误&#39;</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span>
          <span class="token function">reject</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token comment">// 响应失败</span>
      <span class="token function">fail</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        uni<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          icon<span class="token operator">:</span> <span class="token string">&#39;none&#39;</span><span class="token punctuation">,</span>
          title<span class="token operator">:</span> <span class="token string">&#39;网络错误，换个网络试试&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="参考链接-3" tabindex="-1"><a class="header-anchor" href="#参考链接-3" aria-hidden="true">#</a> 参考链接</h3>`,17),an={href:"https://uniapp.dcloud.net.cn/api/request/request.html",target:"_blank",rel:"noopener noreferrer"},tn={href:"https://uniapp.dcloud.net.cn/api/request/network-file.html",target:"_blank",rel:"noopener noreferrer"},en={href:"https://uniapp.dcloud.net.cn/api/interceptor.html",target:"_blank",rel:"noopener noreferrer"},pn={href:"https://juejin.cn/post/6844904104427257870",target:"_blank",rel:"noopener noreferrer"},on=e('<h2 id="问-为什么用-vscode-开发-uni-app-项目而不使用-hbuilder" tabindex="-1"><a class="header-anchor" href="#问-为什么用-vscode-开发-uni-app-项目而不使用-hbuilder" aria-hidden="true">#</a> 问：为什么用 VSCode 开发 uni-app 项目而不使用 Hbuilder？</h2><h3 id="必答-4" tabindex="-1"><a class="header-anchor" href="#必答-4" aria-hidden="true">#</a> 必答</h3><p>（总）其实 Hbuilder 我也有使用，不过最终体验下来还是选择了 <code>VS Code</code> 。</p><p>（分）我主要是有 2 个出发点考虑：</p><ol><li>熟悉度：VSCode 是我最熟悉并习惯使用的代码编辑器，常用的代码片段，快捷键，可以我的开发效率。</li><li>插件生态：我针对 uni-app 项目安装了对应的插件，代码提示，快速新建页面并注册路由，鼠标悬停查文档，这些功能我都在 VSCode 找到对应的插件，非常好用。</li></ol><p>（总）其实还是我自己不想换开发工具，也不是刻意去比较两者谁好谁坏，哪一个编辑器自己用起来更习惯，能提高效率就用哪个。</p><p>温馨提示：Hbuilder 编辑器对 TS 的类型支持还不够完善，就好比 image 组件的 mode 取值写错了，之前用 Hbuilder 的时候校验不出来，而 VSCode 可以校验出错误，期待 Hbuilder 的进步。（如果面试官特别喜欢用 Hbuilder 就不建议提这个，尊重每个人的喜好）</p><h3 id="加分-4" tabindex="-1"><a class="header-anchor" href="#加分-4" aria-hidden="true">#</a> 加分</h3><p>如果面试官对 VS Code 的配置感兴趣，可以继续展开如何配置：</p><p>（总）用 VS Code 开发 uni-app 进行 3 步配置就可以了，也可以给面试官您分享一下：</p><p>（分）</p><ol><li>安装 uni-app 插件 <ul><li><strong>uni-create-view</strong> ：快速创建 uni-app 页面</li><li><strong>uni-helper</strong> ：uni-app 代码提示</li><li><strong>uniapp 小程序扩展</strong> ：鼠标悬停查文档</li></ul></li><li>JSON 注释报错问题，设置文件关联即可，把 <code>manifest.json</code> 和 <code>pages.json</code> 设置为 <code>jsonc</code></li><li>针对 TS 项目增加 TS 类型校验 <ul><li>安装类型声明文件 <code>pnpm i -D miniprogram-api-typings @uni-helper/uni-app-types</code></li><li>配置 <code>tsconfig.json</code></li></ul></li></ol><p>（总） HBuilder 也有它的优点，针对 uni-app 开发的专属功能、内置的调试工具，如果要打包和调试 App 端还要用到 Hbuilder 工具。选择哪一个编辑器写代码取决于开发者的个人喜好和项目需求。</p><h3 id="参考链接-4" tabindex="-1"><a class="header-anchor" href="#参考链接-4" aria-hidden="true">#</a> 参考链接</h3>',14),ln={href:"https://marketplace.visualstudio.com/items?itemName=uni-helper.uni-helper-vscode",target:"_blank",rel:"noopener noreferrer"},cn={href:"https://marketplace.visualstudio.com/items?itemName=mrmaoddxxaa.create-uniapp-view",target:"_blank",rel:"noopener noreferrer"},un={href:"https://juejin.cn/post/7090532271257714695",target:"_blank",rel:"noopener noreferrer"},rn=n("h2",{id:"问-如何在-uni-app-中实现自定义导航栏",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#问-如何在-uni-app-中实现自定义导航栏","aria-hidden":"true"},"#"),s(" 问：如何在 uni-app 中实现自定义导航栏？")],-1),kn=n("h3",{id:"必答-5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#必答-5","aria-hidden":"true"},"#"),s(" 必答")],-1),dn=n("p",null,"我们项目的首页，订单详情页，个人信息页，等页面都用到了自定义导航栏，核心步骤如下：",-1),vn=n("li",null,[s("隐藏默认导航栏：在 "),n("code",null,"pages.json"),s(" 文件中按需设置 "),n("code",null,"navigationStyle"),s(" 为 "),n("code",null,'"custom"'),s(" 。")],-1),mn=n("li",null,"按设计稿要求编写自定义导航栏的结构、样式和脚本。",-1),gn=n("code",null,"getCurrentPages",-1),hn={href:"https://uniapp.dcloud.net.cn/api/router#switchtab",target:"_blank",rel:"noopener noreferrer"},bn={href:"https://uniapp.dcloud.net.cn/api/router#navigateback",target:"_blank",rel:"noopener noreferrer"},fn=n("li",null,"最后，还可以根据需要抽离封装成一个通用的组件，预留标题插槽等，方便复用。",-1),yn={href:"https://uniapp.dcloud.net.cn/component/uniui/uni-nav-bar.html",target:"_blank",rel:"noopener noreferrer"},wn={href:"https://ext.dcloud.net.cn/search?q=%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AF%BC%E8%88%AA%E6%A0%8F",target:"_blank",rel:"noopener noreferrer"},_n=n("h3",{id:"加分-5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#加分-5","aria-hidden":"true"},"#"),s(" 加分")],-1),qn=n("p",null,[s("我们项目中的自定义导航栏其实还做了安全区的样式适配，通过 "),n("code",null,"uni.getSystemInfoSync()"),s(" 获取顶部到安全区的距离，在模板中绑定行内样式，"),n("strong",null,"避免刘海屏或前置摄像头遮挡"),s("导航栏标题或 logo 等重要内容。")],-1),xn={href:"https://developers.weixin.qq.com/miniprogram/dev/api/ui/menu/wx.getMenuButtonBoundingClientRect.html",target:"_blank",rel:"noopener noreferrer"},Sn=e(`<p><strong>参考代码</strong></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// src/pages.json</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;pages/index/index&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;style&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;navigationStyle&quot;</span><span class="token operator">:</span> <span class="token string">&quot;custom&quot;</span> <span class="token comment">// 隐藏默认导航</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token comment">&lt;!-- CustomNavbar.vue --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token comment">// 获取页面栈</span>
<span class="token keyword">const</span> pages <span class="token operator">=</span> <span class="token function">getCurrentPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// 获取屏幕边界到安全区域距离</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> safeAreaInsets <span class="token punctuation">}</span> <span class="token operator">=</span> uni<span class="token punctuation">.</span><span class="token function">getSystemInfoSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 顶部安全区占位 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navbar<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ paddingTop: safeAreaInsets?.top + &#39;px&#39; }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>navigator</span>
        <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pages.length &gt; 1<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">open-type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navigateBack<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>back icon-left<span class="token punctuation">&quot;</span></span>
      <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>navigator</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>navigator</span> <span class="token attr-name">v-else</span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/pages/index/index<span class="token punctuation">&quot;</span></span> <span class="token attr-name">open-type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>switchTab<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>back icon-home<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>navigator</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 插槽 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span><span class="token punctuation">&gt;</span></span>导航栏标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="深入-2" tabindex="-1"><a class="header-anchor" href="#深入-2" aria-hidden="true">#</a> 深入</h3><p>其实我们项目的订单详情页（或者某个页），给自定义导航栏加了滚动驱动动画，增强用户视觉效果：</p><ol><li><code>scroll-view</code> 滚动容器设置一个 <code>id</code>，用于绑定动画效果和滚动容器偏移量。</li><li>获取当前页面实例，因为这个功能目前只有微信小程序端支持，H5 端不支持，还需要写条件编译。</li><li>onReady 绑定生命周期钩子中，通过 animate 设置动画配置，并通过 <code>id</code> 绑定滚动容器，设置触发偏移量等信息。</li></ol><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token comment">// 获取屏幕边界到安全区域距离</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> safeAreaInsets <span class="token punctuation">}</span> <span class="token operator">=</span> uni<span class="token punctuation">.</span><span class="token function">getSystemInfoSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// 获取页面栈</span>
<span class="token keyword">const</span> pages <span class="token operator">=</span> <span class="token function">getCurrentPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// #ifdef MP-WEIXIN</span>
<span class="token comment">// 获取当前页面实例，数组最后一项</span>
<span class="token keyword">const</span> pageInstance <span class="token operator">=</span> pages<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">as</span> any

<span class="token comment">// 页面渲染完毕，绑定动画效果</span>
<span class="token function">onReady</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 动画效果,导航栏背景色</span>
  pageInstance<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span>
    <span class="token string">&#39;.navbar&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token string">&#39;transparent&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token string">&#39;#f8f8f8&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token number">1000</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">scrollSource</span><span class="token operator">:</span> <span class="token string">&#39;#scroller&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">timeRange</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>
      <span class="token literal-property property">startScrollOffset</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token literal-property property">endScrollOffset</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// #endif</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 自定义导航栏: 默认透明不可见, scroll-view 滚动到 50 时展示 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navbar<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ paddingTop: safeAreaInsets?.top + &#39;px&#39; }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>navigator</span>
        <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pages.length &gt; 1<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">open-type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navigateBack<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>back icon-left<span class="token punctuation">&quot;</span></span>
      <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>navigator</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>navigator</span> <span class="token attr-name">v-else</span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/pages/index/index<span class="token punctuation">&quot;</span></span> <span class="token attr-name">open-type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>switchTab<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>back icon-home<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>navigator</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>订单详情<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scroll-view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">scroll-y</span> <span class="token attr-name">enable-back-to-top</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scroller<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    ...滚动容器
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scroll-view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="参考链接-5" tabindex="-1"><a class="header-anchor" href="#参考链接-5" aria-hidden="true">#</a> 参考链接</h3>`,8),En={href:"https://uniapp.dcloud.net.cn/component/uniui/uni-nav-bar.html",target:"_blank",rel:"noopener noreferrer"},An={href:"https://ext.dcloud.net.cn/search?q=%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AF%BC%E8%88%AA%E6%A0%8F",target:"_blank",rel:"noopener noreferrer"},Pn={href:"https://uniapp.dcloud.net.cn/api/system/info.html#getsysteminfosync",target:"_blank",rel:"noopener noreferrer"},jn={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/view/animation.html#%E6%BB%9A%E5%8A%A8%E9%A9%B1%E5%8A%A8%E7%9A%84%E5%8A%A8%E7%94%BB",target:"_blank",rel:"noopener noreferrer"},Vn=n("h2",{id:"问-如何在-uni-app-项目中进行代码优化或性能优化",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#问-如何在-uni-app-项目中进行代码优化或性能优化","aria-hidden":"true"},"#"),s(" 问：如何在 uni-app 项目中进行代码优化或性能优化？")],-1),Cn=n("h3",{id:"必答-6",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#必答-6","aria-hidden":"true"},"#"),s(" 必答")],-1),Hn=n("p",null,"（总）其实代码优化和性能优化是一个持续进行的过程，我们的项目主要是做了以下的优化：",-1),Bn=n("p",null,[s("（分）"),n("strong",null,"根据自身理解，选其中几点回答即可，大部分其实在项目中都有体现：")],-1),In=e("<li>页面加载优化： <ul><li>按需加载：使用图片懒加载，只在需要时加载（商品图片添加 lazy-load 属性即可）。</li><li>分包加载：项目模块拆分为多个包，<strong>按需加载</strong>对应的包，降低初始加载时间。（项目的分包，分包页面的图片等资源也可放到分包的文件夹中，减少主包资源体积）</li></ul></li><li>代码优化： <ul><li>代码分层：按功能模块化代码，提高代码可读性和可维护性（goods.ts、home.ts 等划分）。</li><li>使用枚举：枚举提供了一种更有意义的命名方式，使代码更具可读性，类型也更安全 。</li><li>条件编译：在处理多端的时候，按条件编译平台所需代码，减少冗余。（登录界面等）</li><li>类型安全：为组件 TS 提供了静态类型检查，有助于在编译阶段发现潜在的类型错误。这可以减少运行时错误，提高代码的可靠性。(安装 uni-app-types、uni-ui-types)</li></ul></li><li>数据处理优化： <ul><li>数据获取：仅获取和处理需要的数据，避免不必要的数据处理，分页时设计合理的页容量，减少一次性渲染的节点数量。 （如：订单列表的容量为 5，因为订单信息较多，实际情况是屏幕大概能放 3 个）</li><li>数据缓存：缓存获取的数据，减少不必要的数据请求（配置持久化存储）。</li><li>优化数据更新：在 uni-app 中，定义在 data/ref 里面的数据每次变化时都会通知视图层重新渲染页面。所以如果不是视图所需要的变量，可以不定义在 data/ref 中，可定义普通变量，以避免造成资源浪费。（如分页的参数，仅用于发送请求和判断条件，不用于界面渲染，没有用 ref 定义这份变化的数据）</li></ul></li><li>组件化开发： <ul><li>组件复用：对于通用功能，将其封装为组件，提高代码复用性。（猜你喜欢组件，轮播图组件）</li></ul></li>",4),Tn=n("li",null,"减少本地图片：除了 tabBar 图片，logo 等重要的图片，其他图片进可能使用 CND 图片。",-1),Ln={href:"https://tinypng.com/",target:"_blank",rel:"noopener noreferrer"},Mn=n("li",null,"网络环境适配：获取设备的网络类型，可以在应用中根据网络环境做出相应调整，如在较慢的网络环境下降低图片质量、限制大文件下载等。",-1),Nn=e("<li>使用 CDN 加速： <ul><li>将静态资源文件放在 CDN 上，加速资源文件的加载速度。（公司已购买，由运维管理，项目商品图都已开启 CDN 加速）</li></ul></li><li>页面渲染优化： <ul><li>使用条件渲染语句（如 <code>wx:if</code>）合理控制组件渲染：减少不必要的组件渲染。（空购物车，订单状态等，v-if 可以减少 DOM 树的大小，从而减少重绘成本，而 v-show 通过 CSS 来控制显示，适用于频繁切换的场景。）</li><li>避免不必要的组件重绘：减少不必要的数据变动，避免组件频繁重绘。（v-for 的 key 值有助于 Vue 识别和复用已存在的元素，减少重绘次数。v-if、v-show 的合理使用也是减少重绘成本）</li><li>骨架屏提升用户体验：使用户感知到数据正在加载，降低用户等待时的焦虑感，避免页面白屏闪烁。(微信开发者工具自动生成，<strong>项目首页</strong>和部分<strong>请求数据量较大的页面</strong>记得添加骨架屏)</li><li>避免视图层和逻辑层频繁进行通讯：减少 <code>scroll-view</code> 组件的 <code>scroll</code> 事件监听，注意 onPageScroll 的使用。（项目中没有使用 scroll 和 onPageScroll，如果一定要使用可以<strong>添加防抖</strong> 减少视图层频繁渲染，防抖和节流函数 lodash 都有现成的）</li><li>多使用组件自带动画，css 动画，而不是通过 js 的定时器操作界面做动画（swiper 滑动动画是自带的，订单列表页 Tabs 的滑块使用了 css 动画，滚动驱动的动画是小程序自带的并非手动监听 scroll 事件）</li></ul></li><li>优化网络请求： <ul><li>使用请求拦截和响应拦截：对请求和响应进行拦截处理，提高请求效率。（http.ts 的封装）</li></ul></li>",3),Dn=e(`<p>（总）总的来说，性能优化是一个持续进行的过程，通过不断地优化和调整，提高项目的性能和用户体验。</p><h3 id="加分-6" tabindex="-1"><a class="header-anchor" href="#加分-6" aria-hidden="true">#</a> 加分</h3><p>理论上越多越好，<strong>按照自己的理解情况回答</strong>，回答时可提及项目中的业务场景适当展开。</p><h3 id="深入-3" tabindex="-1"><a class="header-anchor" href="#深入-3" aria-hidden="true">#</a> 深入</h3><p>如何在 uni-app 项目中使用使用防抖或节流函数。</p><ol><li>安装 lodash 工具库 <code>pnpm i lodash</code>，在 TS 项目中安装类型声明文件 <code>pnpm i -D @types/lodash</code>。</li><li>导入 <code>debounce</code> 防抖函数。</li><li>用 <code>debounce</code> 函数包裹原事件函数并设置合理的延迟时间（结合真机调试取合适毫秒值）。</li></ol><p><strong>参考代码</strong></p><p>组合式 API 写法：</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> throttle <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;lodash&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

<span class="token comment">// 响应式数据</span>
<span class="token keyword">const</span> scrollTop <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

<span class="token comment">// 普通的事件函数</span>
<span class="token keyword">const</span> <span class="token function-variable function">onScroll2</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">ev</span><span class="token operator">:</span> UniHelper<span class="token punctuation">.</span>ScrollViewOnScrollEvent</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 🔴触发频率非常高，视图层频繁渲染</span>
  scrollTop<span class="token punctuation">.</span>value <span class="token operator">=</span> ev<span class="token punctuation">.</span>detail<span class="token punctuation">.</span>scrollTop
<span class="token punctuation">}</span>

<span class="token comment">// 添加节流的事件函数</span>
<span class="token keyword">const</span> onScroll <span class="token operator">=</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">ev</span><span class="token operator">:</span> UniHelper<span class="token punctuation">.</span>ScrollViewOnScrollEvent</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 🟢在 100 秒内最多执行一次函数，更新视图层</span>
  scrollTop<span class="token punctuation">.</span>value <span class="token operator">=</span> ev<span class="token punctuation">.</span>detail<span class="token punctuation">.</span>scrollTop
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 滚动容器 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scroll-view</span> <span class="token attr-name">scroll-y</span> <span class="token attr-name">@scroll</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onScroll<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 打印坐标 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span> <span class="token property">top</span><span class="token punctuation">:</span> 100rpx<span class="token punctuation">;</span> <span class="token property">left</span><span class="token punctuation">:</span> 50rpx<span class="token punctuation">;</span> <span class="token property">background-color</span><span class="token punctuation">:</span> pink</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
      scrollTop:{{ scrollTop }}
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">height</span><span class="token punctuation">:</span> 5000rpx</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span> 内容 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scroll-view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>选项式 API 写法：</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> debounce <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;lodash&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">scrollTop</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token literal-property property">debouncedScroll</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token keyword">as</span> any<span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 防抖的处理函数，🟢适当延迟 50 毫秒后，再更新视图层</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>debouncedScroll <span class="token operator">=</span> <span class="token function">debounce</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>onScroll<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">unmounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 最好是在组件卸载时,清除掉防抖计时器</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>debouncedScroll<span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// 普通的事件处理函数</span>
    <span class="token function">onScroll</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">ev</span><span class="token operator">:</span> UniHelper<span class="token punctuation">.</span>ScrollViewOnScrollEvent</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>scrollTop <span class="token operator">=</span> ev<span class="token punctuation">.</span>detail<span class="token punctuation">.</span>scrollTop
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 滚动容器 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scroll-view</span> <span class="token attr-name">scroll-y</span> <span class="token attr-name">@scroll</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>debouncedScroll<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 打印坐标 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span> <span class="token property">top</span><span class="token punctuation">:</span> 100rpx<span class="token punctuation">;</span> <span class="token property">left</span><span class="token punctuation">:</span> 50rpx<span class="token punctuation">;</span> <span class="token property">background-color</span><span class="token punctuation">:</span> pink</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
      scrollTop:{{ scrollTop }}
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">height</span><span class="token punctuation">:</span> 5000rpx</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span> 内容 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scroll-view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="再深入-防抖和节流" tabindex="-1"><a class="header-anchor" href="#再深入-防抖和节流" aria-hidden="true">#</a> 再深入-防抖和节流</h3><p>(总) 防抖（debounce）和节流（throttle）函数在处理高频触发事件时都非常实用。</p><p><strong>debounce（防抖）函数</strong>：该函数会从上一次被调用后，延迟 <code>wait</code> 毫秒后调用<code>func</code> 函数。</p><p><strong>throttle （节流）函数</strong>：在 <code>wait</code> 秒内最多执行 <code>func</code> 一次的函数。</p><p><strong>根据自身理解，选其中几点回答即可：</strong></p><p>（分 1）防抖（debounce）函数在以下应用场景中非常实用：</p><ol><li>输入框实时搜索：当用户在输入框中输入时，可以使用防抖函数来延迟触发搜索请求。这样可以减少服务器请求次数，提高性能。</li><li>按钮点击：在一些场景下，如表单提交、购物车结算等，为避免用户频繁点击按钮导致重复提交数据，可以使用防抖函数控制按钮点击事件的触发。</li><li>滚动事件：在处理滚动事件时，可以使用防抖函数来限制事件处理函数的执行频率。例如，当用户滚动页面时，可以使用防抖函数来延迟加载图片或触发其他与滚动相关的操作。</li><li>用户操作监听：在实时监控用户操作（如鼠标移动、点击等）的场景中，可以使用防抖函数来减少事件处理函数的执行次数，降低系统资源消耗。</li></ol><p>（分 2）节流（throttle）函数在以下应用场景中非常实用：</p><ol><li>滚动加载：在无限滚动列表或页面滚动加载数据的场景中，可以使用节流函数控制滚动事件处理函数的执行频率，以减轻服务器压力和提高性能。（组件库一般有实现）</li><li>页面滚动时的动画效果：当用户滚动页面时，可以使用节流函数来控制动画效果的触发频率，以保持流畅的动画表现，避免性能抖动。（微信小程序的滚动驱动动画内部实现）</li><li>实时监控鼠标移动：在需要实时监控鼠标移动的场景中，可以使用节流函数限制事件处理函数的执行频率，降低系统资源消耗。</li><li>浏览器窗口大小调整：当用户调整浏览器窗口大小时，可以使用节流函数来限制与窗口大小相关的布局调整或重绘的执行频率，提高页面性能。</li><li>实时数据采集：在需要实时采集用户行为数据的场景中，可以使用节流函数来控制数据发送频率，减轻服务器压力。</li></ol><p>（总）虽然防抖和节流的应用场景看似有所重叠，但它们的工作原理和应用场景有所不同：</p><ol><li>工作原理：</li></ol><p>防抖（debounce）：当事件触发后，防抖函数会等待一定时间（设定的延迟时间），如果在这段时间内事件没有再次触发，则执行事件处理函数。如果在这段时间内事件再次触发，那么重新开始等待延迟时间。简单来说，防抖就是让事件处理函数在事件触发后的一段时间内不执行，只有当事件停止触发一段时间后，才会执行。</p><p>节流（throttle）：节流函数会在一定时间间隔内执行事件处理函数，即使在这段时间内事件多次触发，也只会执行一次事件处理函数。简言之，节流就是让事件处理函数以固定的频率执行。</p><ol><li>应用场景：</li></ol><p>它们在不同的场景下有各自的优势：</p><p><strong>防抖</strong>适用于需要等待一段时间后才执行的场景，如：<strong>搜索框输入实时搜索、按钮点击避免重复提交</strong>等。这些场景中，只关心事件触发的最后一次，而不关心事件在中间的过程。</p><p><strong>节流</strong>适用于需要以一定频率执行的场景，如：<strong>滚动加载、窗口大小调整、鼠标移动监控</strong>等。这些场景中，关心事件在整个过程中的表现，而不仅仅是最后一次触发。</p><p><strong>总结：防抖关注事件触发后的延迟执行，节流关注事件在整个过程中以固定频率执行。在选择使用防抖或节流时，需要根据具体的应用场景和需求来决定。</strong></p><h3 id="参考链接-6" tabindex="-1"><a class="header-anchor" href="#参考链接-6" aria-hidden="true">#</a> 参考链接</h3>`,30),Un={href:"https://uniapp.dcloud.net.cn/tutorial/performance.html#%E4%BC%98%E5%8C%96%E5%BB%BA%E8%AE%AE",target:"_blank",rel:"noopener noreferrer"},Rn={href:"https://tinypng.com/",target:"_blank",rel:"noopener noreferrer"},On={href:"https://cn.vuejs.org/guide/essentials/reactivity-fundamentals.html#stateful-methods",target:"_blank",rel:"noopener noreferrer"},zn={href:"https://cn.vuejs.org/api/reactivity-advanced.html#customref",target:"_blank",rel:"noopener noreferrer"},Fn={href:"https://www.lodashjs.com/docs/lodash.debounce",target:"_blank",rel:"noopener noreferrer"},Gn={href:"https://www.lodashjs.com/docs/lodash.throttle#_throttlefunc-wait0-options",target:"_blank",rel:"noopener noreferrer"},Wn=n("div",{class:"custom-container tip"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8h.01"}),n("path",{d:"M11 12h1v4h1"})])]),n("p",{class:"custom-container-title"},"类似问题"),n("ul",null,[n("li",null,"请谈谈如何在 uni-app 中实现页面的按需加载？"),n("li",null,"请谈谈防抖和节流的理解和应用场景？")])],-1),Xn=e(`<h2 id="在-uni-app-中-如何实现下拉刷新和上拉加载更多功能" tabindex="-1"><a class="header-anchor" href="#在-uni-app-中-如何实现下拉刷新和上拉加载更多功能" aria-hidden="true">#</a> 在 uni-app 中，如何实现下拉刷新和上拉加载更多功能？</h2><p>参考首页的下拉刷新，猜你喜欢组件和热门推荐页的上拉加载分页。</p><h3 id="必答-下拉刷新" tabindex="-1"><a class="header-anchor" href="#必答-下拉刷新" aria-hidden="true">#</a> 必答-下拉刷新</h3><p>我们是通过 <code>scroll-view</code> 组件 实现的下拉刷新，步骤如下：</p><ol><li>启用下拉刷新： 添加 <code>refresher-enabled</code> 属性。</li><li>下拉刷新事件：绑定 <code>@refresherrefresh</code> 事件。</li><li>添加 下拉刷新状态 标记： 添加 <code>refresher-triggered</code> 属性，用于关闭动画的。</li><li>下拉刷新事件内部：主要是重新获取数据，当数据获取成功后，主动关闭下拉刷新动画。注意在多个请求的情况下，需要用 <code>Promise.all()</code> 等所有请求都结束了，再关闭动画。</li></ol><p><strong>参考代码</strong></p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token comment">// 当前下拉刷新状态</span>
<span class="token keyword">const</span> isTriggered <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
<span class="token comment">// 自定义下拉刷新被触发</span>
<span class="token keyword">const</span> <span class="token function-variable function">onRefresherrefresh</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 开始动画</span>
  isTriggered<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token comment">// 加载数据</span>
  <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">getHomeBannerData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">getHomeCategoryData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">getHomeHotData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token comment">// 关闭动画</span>
  isTriggered<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 滚动容器 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scroll-view</span>
    <span class="token attr-name">refresher-enabled</span>
    <span class="token attr-name">@refresherrefresh</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onRefresherrefresh<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">:refresher-triggered</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isTriggered<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">scroll-y</span>
  <span class="token punctuation">&gt;</span></span>
    ....
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scroll-view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="必答-分页加载" tabindex="-1"><a class="header-anchor" href="#必答-分页加载" aria-hidden="true">#</a> 必答-分页加载</h3><p>上拉加载更多其实就是分页加载，主要步骤如下。</p><ol><li>定义 <code>pageParams</code> 对象，存储分页参数，包括页码 <code>page</code> 和每页数据量 <code>pageSize</code>。</li><li>定义 <code>finish</code> 响应式引用，表示是否已加载完所有数据。</li><li>滚动触底事件：给 <code>scroll-view</code> 组件绑定 <code>@scrolltolower</code> 事件。</li><li>在事件内部需要判断是否已加载完所有数据，没有结束就继续发送请求，同时页码要累加，获取的数据要追加到原数组后，如果分页已结束，就更新 <code>finish</code> 标记，并提醒用户。</li></ol><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token comment">// 分页参数</span>
<span class="token keyword">const</span> <span class="token literal-property property">pageParams</span><span class="token operator">:</span> Required<span class="token operator">&lt;</span>PageParams<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">page</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">pageSize</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token comment">// 猜你喜欢的列表</span>
<span class="token keyword">const</span> guessList <span class="token operator">=</span> ref<span class="token operator">&lt;</span>GuessItem<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// 已结束标记</span>
<span class="token keyword">const</span> finish <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
<span class="token comment">// 获取猜你喜欢数据</span>
<span class="token keyword">const</span> <span class="token function-variable function">getHomeGoodsGuessLikeData</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 退出分页判断</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>finish<span class="token punctuation">.</span>value <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> uni<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;none&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;没有更多数据~&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getHomeGoodsGuessLikeAPI</span><span class="token punctuation">(</span>pageParams<span class="token punctuation">)</span>
  <span class="token comment">// 数组追加</span>
  guessList<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>res<span class="token punctuation">.</span>result<span class="token punctuation">.</span>items<span class="token punctuation">)</span>
  <span class="token comment">// 分页条件</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>pageParams<span class="token punctuation">.</span>page <span class="token operator">&lt;</span> res<span class="token punctuation">.</span>result<span class="token punctuation">.</span>pages<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 页码累加</span>
    pageParams<span class="token punctuation">.</span>page<span class="token operator">++</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    finish<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// 重置数据</span>
<span class="token keyword">const</span> <span class="token function-variable function">resetData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  pageParams<span class="token punctuation">.</span>page <span class="token operator">=</span> <span class="token number">1</span>
  guessList<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  finish<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
<span class="token comment">// 组件挂载完毕</span>
<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">getHomeGoodsGuessLikeData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 滚动容器 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scroll-view</span> <span class="token attr-name">@scrolltolower</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onScrolltolower<span class="token punctuation">&quot;</span></span> <span class="token attr-name">scroll-y</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 猜你喜欢列表 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>guess<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>navigator</span>
        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>guess-item<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item in guessList<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.id<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">:url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\`/pages/goods/goods?id=\${item.id}\`<span class="token punctuation">&quot;</span></span>
      <span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>image<span class="token punctuation">&quot;</span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>aspectFill<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.picture<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>image</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> {{ item.name }} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>price<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>small<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>¥<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span><span class="token punctuation">&gt;</span></span>{{ item.price }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>navigator</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>loading-text<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      {{ finish ? &#39;没有更多数据~&#39; : &#39;正在加载...&#39; }}
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scroll-view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="如何在-uni-app-中处理表单元素" tabindex="-1"><a class="header-anchor" href="#如何在-uni-app-中处理表单元素" aria-hidden="true">#</a> 如何在 uni-app 中处理表单元素？</h2><h3 id="必答-7" tabindex="-1"><a class="header-anchor" href="#必答-7" aria-hidden="true">#</a> 必答</h3><p>在我们项目的个人信息页，收货地址表单页等页面都涉及到表单数据的收集。</p><p>（总）在 uni-app 中使用的是 <code>&lt;input&gt;</code>、<code>&lt;radio&gt;</code> 、<code>&lt;checkbox&gt;</code> 和<code> &lt;picker&gt;</code> 等组件，能兼容不同平台。</p><p>（分）</p><ol><li><code>input</code> 支持 <code>v-model</code> 双向绑定，收集数据比较便利。</li><li><code>&lt;radio&gt;</code> 、<code>&lt;checkbox&gt;</code> 和<code> &lt;picker&gt;</code> 等不支持 <code>v-model</code> 指令，可以使用 <code>:value</code> 和 <code>@change</code> 代替 <code>v-model</code> 来实现类似的效果。</li></ol><p>（总） <strong>小程序端的表单组件具有一些特有的属性，外观和功能都有些差异</strong>，如 <code>input</code> 组件的 <code>type</code> 属性支持的值与网页端有所不同。例如，小程序端的 <code>input</code> 组件有一个 <code>idcard</code> 类型，而网页端没有。所以<strong>不要完全凭借网页端的经验处理小程序的表单</strong>，尽管部分表单组件的名称和网页端同名，也要应该要查阅 uni-app 组件部分的文档了解差异。</p><p><strong>参考代码</strong></p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

<span class="token keyword">const</span> switchValue <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token function-variable function">onSwitchChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">ev</span><span class="token operator">:</span> UniHelper<span class="token punctuation">.</span>SwitchOnChangeEvent</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  switchValue<span class="token punctuation">.</span>value <span class="token operator">=</span> ev<span class="token punctuation">.</span>detail<span class="token punctuation">.</span>value
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>switch</span> <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>switchValue<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onSwitchChange<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（总）在这个例子中，我们使用 <code>ref</code> 函数创建了一个名为 <code>switchValue</code> 的响应式引用，并使用 <code>:value</code> 将 <code>switchValue</code> 的值传递给 <code>&lt;switch&gt;</code> 组件。我们还定义了一个名为 <code>onSwitchChange</code> 的函数，它在开关状态发生变化时被 <code>@change</code> 事件监听器调用，从而根据事件对象中的 <code>detail.value</code> 更新 <code>switchValue</code> 的值。</p><h3 id="加分-表单校验" tabindex="-1"><a class="header-anchor" href="#加分-表单校验" aria-hidden="true">#</a> 加分-表单校验</h3><p>项目中我们还通过 <code>uni-forms</code> 实现了表单的校验。</p><p>以下是使用 uni-forms 实现表单校验的具体步骤：</p><ol><li>创建表单数据和验证规则：使用 <code>ref</code> 函数创建表单数据对象 <code>form</code> 和验证规则对象 <code>rules</code>。</li><li>设置 ·uni-forms 属性：在 <code>&lt;uni-forms&gt;</code> 组件上设置 <code>:model</code> 和 <code>:rules</code> 属性，分别绑定到 <code>form</code> 和 <code>rules</code>。</li><li>使用 uni-form-item 组件和 input 组件构建表单：为每个表单项创建一个 <code>&lt;uni-form-item&gt;</code> 组件，并设置 <code>name</code> 属性。在表单项内部使用 <code>&lt;input&gt; </code>组件，并使用 <code>v-model</code> 指令进行双向数据绑定。</li><li>创建表单引用：使用 <code>ref</code> 函数创建一个名为 <code>formRef</code> 的引用，将其设置为 <code>&lt;uni-forms&gt;</code> 组件的 <code>ref</code> 属性。</li><li>创建表单提交处理函数：定义一个名为 <code>onSubmit</code> 的函数，在此函数内部使用 <code>formRef.value.validate()</code> 方法进行表单验证。根据验证结果执行相应的逻辑（例如，提交表单或显示错误提示）。</li><li>添加提交按钮：在模板中添加一个提交按钮，为其设置 <code>@tap</code> 事件监听器，绑定到 <code>onSubmit</code> 函数。</li></ol><p><strong>参考代码</strong></p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

<span class="token keyword">const</span> form <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token literal-property property">rules</span><span class="token operator">:</span> UniHelper<span class="token punctuation">.</span>UniFormsRules <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">errorMessage</span><span class="token operator">:</span> <span class="token string">&#39;用户名不能为空&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">errorMessage</span><span class="token operator">:</span> <span class="token string">&#39;密码不能为空&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> formRef <span class="token operator">=</span> ref<span class="token operator">&lt;</span>UniHelper<span class="token punctuation">.</span>UniFormsInstance<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token function-variable function">onSubmit</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> formRef<span class="token punctuation">.</span>value<span class="token operator">?.</span>validate<span class="token operator">!</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;校验通过，提交数据：&#39;</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;校验未通过：&#39;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uni-forms</span> <span class="token attr-name">:model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:rules</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rules<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>formRef<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uni-forms-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>用户名：<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>username<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form.username<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>请输入用户名<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>uni-forms-item</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uni-forms-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>密码:<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">password</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form.password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>请输入密码<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>uni-forms-item</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@tap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onSubmit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>提交<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>uni-forms</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="参考链接-7" tabindex="-1"><a class="header-anchor" href="#参考链接-7" aria-hidden="true">#</a> 参考链接</h3>`,28),Jn={href:"https://uniapp.dcloud.net.cn/component/form.html",target:"_blank",rel:"noopener noreferrer"},Kn={href:"https://uniapp.dcloud.net.cn/component/uniui/uni-forms.html#%E8%A1%A8%E5%8D%95%E6%A0%A1%E9%AA%8C",target:"_blank",rel:"noopener noreferrer"},Qn=n("div",{class:"custom-container tip"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8h.01"}),n("path",{d:"M11 12h1v4h1"})])]),n("p",{class:"custom-container-title"},"类似问题"),n("ul",null,[n("li",null,"在 uni-app 中，如何处理不同平台下的表单处理差异？")])],-1),$n=n("h2",{id:"问-请谈谈你在使用-uni-app-过程中遇到的问题-以及如何解决它们。",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#问-请谈谈你在使用-uni-app-过程中遇到的问题-以及如何解决它们。","aria-hidden":"true"},"#"),s(" 问：请谈谈你在使用 uni-app 过程中遇到的问题，以及如何解决它们。")],-1),Yn=n("h3",{id:"必答-8",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#必答-8","aria-hidden":"true"},"#"),s(" 必答")],-1),Zn=n("p",null,"（总）在遇到问题时，我一般都是参考官方文档、社区资源和其他开发者的经验。",-1),ns=n("p",null,"（分）根据自身理解，选其中几点回答即可：",-1),ss={href:"https://uniapp.dcloud.net.cn/collocation/App.html#applifecycle",target:"_blank",rel:"noopener noreferrer"},as={href:"https://uniapp.dcloud.net.cn/tutorial/page.html#lifecycle",target:"_blank",rel:"noopener noreferrer"},ts={href:"https://uniapp.dcloud.net.cn/tutorial/vue3-api.html",target:"_blank",rel:"noopener noreferrer"},es=n("strong",null,"微信小程序端不支持自定义指令 directive",-1),ps={href:"https://ask.dcloud.net.cn/article/40459",target:"_blank",rel:"noopener noreferrer"},os=n("li",null,[s("跨平台兼容性问题： 由于 uni-app 需要适配多个平台，开发过程中可能会遇到不同平台的兼容性问题。在遇到此类问题时，可以参考官方文档和社区资源，了解不同平台的特性和限制，然后针对性地解决问题。如果必要，可以使用条件编译，在不同平台下执行不同的代码。 "),n("ul",null,[n("li",null,"如 H5 端不支持 微信登录，滚动驱动的动画等功能。")])],-1),ls={href:"https://tinypng.com/",target:"_blank",rel:"noopener noreferrer"},cs=n("li",null,"减少不必要的计算和渲染；",-1),is=n("li",null,"使用分包加载，按需加载页面和资源；",-1),us=n("li",null,[s("插件兼容性问题： 当使用第三方插件或库时，可能会遇到兼容性问题。在这种情况下，可以尝试以下方法： "),n("ul",null,[n("li",null,"查找针对 uni-app 的插件版本；(如 SKU 组件要筛选支持 Vue3 版的，axios 不支持小程序端则自行封装)"),n("li",null,"修改插件配置，以适应 uni-app 的环境；(如 Pinia 持久化存储方案需要改默认配置)"),n("li",null,"寻找替代方案，如使用 uni-app 官方提供的 API 或组件。（如 组件库使用官方的 uni-ui）")])],-1),rs=n("li",null,[s("更新和维护问题： 随着项目的发展，可能需要更新和维护代码。为了降低维护成本，可以： "),n("ul",null,[n("li",null,"保持代码的模块化和组件化；（一直都有保持）"),n("li",null,"遵循良好的编码规范；（一直都有保持）"),n("li",null,"编写文档，记录项目结构和功能。（一直都保持，如：封装函数写 JSDoc 注释）")])],-1),ks=n("p",null,"（总）其实 uni-app 官方文档记录了大量的跨平台兼容性问题和解决方案，uni-app 插件市场有大量插件，同时 uni-app 社区也有其他开发者分享的经验，也可以在 uni-app 社区提问题，以找到合适的解决方案。最后，保持良好的编码规范和项目结构，可以降低维护成本，提高开发效率。",-1),ds=n("h3",{id:"参考链接-8",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考链接-8","aria-hidden":"true"},"#"),s(" 参考链接")],-1),vs={href:"https://uniapp.dcloud.net.cn/matter.html#h5%E6%AD%A3%E5%B8%B8%E4%BD%86app%E5%BC%82%E5%B8%B8%E7%9A%84%E5%8F%AF%E8%83%BD%E6%80%A7",target:"_blank",rel:"noopener noreferrer"},ms={href:"https://uniapp.dcloud.net.cn/matter.html#%E5%8C%BA%E5%88%AB%E4%BA%8E%E4%BC%A0%E7%BB%9F-web-%E5%BC%80%E5%8F%91%E7%9A%84%E6%B3%A8%E6%84%8F",target:"_blank",rel:"noopener noreferrer"},gs={href:"https://uniapp.dcloud.net.cn/tutorial/platform.html#%E8%B7%A8%E7%AB%AF%E5%85%BC%E5%AE%B9",target:"_blank",rel:"noopener noreferrer"},hs={href:"https://uniapp.dcloud.net.cn/faq.html",target:"_blank",rel:"noopener noreferrer"},bs={href:"https://uniapp.dcloud.net.cn/tutorial/performance.html#%E4%BC%98%E5%8C%96%E5%BB%BA%E8%AE%AE",target:"_blank",rel:"noopener noreferrer"},fs={href:"https://juejin.cn/post/7140512715453235207",target:"_blank",rel:"noopener noreferrer"},ys={href:"https://tinypng.com/",target:"_blank",rel:"noopener noreferrer"},ws=e(`<h2 id="问-请简述代码规范在团队协作中的重要性" tabindex="-1"><a class="header-anchor" href="#问-请简述代码规范在团队协作中的重要性" aria-hidden="true">#</a> 问：请简述代码规范在团队协作中的重要性？</h2><h3 id="必答-9" tabindex="-1"><a class="header-anchor" href="#必答-9" aria-hidden="true">#</a> 必答</h3><p>（总）我们团队是使用 ESLint、Prettier 和 Husky 来确保代码质量和一致性：</p><p>（分）<strong>根据自身理解，选其中几点回答即可：</strong></p><ol><li><strong>保持代码一致性</strong>：代码规范可以确保团队成员遵循相同的编码风格和约定。这可以提高代码的可读性，使团队成员更容易理解和维护彼此的代码。</li><li><strong>提高代码质量</strong>：通过强制执行一些最佳实践，ESLint 可以帮助开发者避免常见的错误和潜在的风险。这有助于提高代码的质量，减少维护成本。</li><li><strong>自动化格式化</strong>：Prettier 可以自动格式化代码，保持代码整洁，减轻开发者在调整代码格式时的负担。它可以帮助开发者专注于编写功能代码，而无需担心代码风格的问题。</li><li><strong>预提交检查</strong>：Husky 可以在代码提交到版本控制系统（如 Git）之前执行一些预定义的任务，如运行 ESLint 和 Prettier 检查。这有助于确保仅提交符合规范的代码，从而减少代码审查和后期修复的成本。</li><li><strong>更好的协作</strong>：通过遵循相同的代码规范和工具，团队成员之间的协作变得更加顺畅。这有助于提高开发效率，降低沟通成本。</li><li><strong>提高开发效率</strong>：使用这些工具可以自动处理一些繁琐的任务（如格式化、检查错误等），从而使开发者可以专注于编写高质量的功能代码，提高开发效率。</li></ol><p>（总）总之，<strong>通过遵循统一的规范，团队可以更高效地开发和维护项目</strong>。</p><h3 id="深入-4" tabindex="-1"><a class="header-anchor" href="#深入-4" aria-hidden="true">#</a> 深入</h3><p>可以谈谈在 uni-app 项目中是如何应用 ESLint、Prettier 和 Husky 的，以及你遇到的一些挑战和解决方法。</p><p>（总）<strong>这些配置是由团队负责人制定，当然也可以由你自己配置，在小兔鲜儿的项目中已全部配置。</strong></p><p>（分）具体步骤可以如下：</p><ol><li>首先，我们需要安装 ESLint、Prettier 和 Husky 作为项目的<strong>开发依赖</strong>。</li><li>接下来，<strong>配置 ESLint</strong>。在项目根目录下创建一个 .eslintrc.js 或 .eslintrc.json 配置文件，并定义相应的规则。可以根据项目需求，选择使用 Vue 官方推荐的规则或者自定义规则。同时，我们需要在项目的 package.json 文件中的 &quot;scripts&quot; 部分添加一个用于执行 ESLint 检查的脚本，例如：<code>&quot;lint&quot;: &quot;eslint --ext .js,.vue,.ts --fix&quot;</code>。</li><li>接着，<strong>配置 Prettier</strong>。创建一个 .prettierrc.js 或 .prettierrc.json 配置文件，在其中定义代码格式化规则。同时，可以在 .eslintrc.js 或 .eslintrc.json 文件中添加一些与 Prettier 相关的配置，以确保 ESLint 与 Prettier 能够协同工作。</li><li>然后，<strong>配置 Husky</strong>。在项目中定义 Git 钩子。例如，在 pre-commit 钩子中执行 ESLint 和 Prettier 检查以确保提交的代码符合规范。</li><li>最后，为了确保团队成员能够在各种编辑器中保持一致的代码风格，建议在项目中添加一个 .editorconfig 文件，定义编辑器相关的通用配置。</li></ol><p><strong>在应用这些工具时，其实也遇到了的一些挑战：</strong></p><ul><li>在使用 uni. 全局变量的时候报错，针对 uni-app 项目设置全局变量，如：getCurrentPages、uni、wx、UniHelper。</li><li>ESLint、Prettier 和编辑器之间可能存在冲突。为了解决这个问题，可以在 .eslintrc.js 或 .eslintrc.json 文件中添加与 Prettier 相关的配置，并确保编辑器插件正确地应用了这些配置。</li><li>部分 ESLint 规则可能与项目需求不符。在这种情况下，可以根据项目实际情况，自定义规则或禁用部分不适用的规则。</li><li>当使用第三方库或组件时，可能会遇到与 ESLint 规则冲突的问题。可以在 .eslintignore 文件中排除这些文件，或者在特定文件中禁用特定规则。</li></ul><p>通过克服这些挑战，我们可以在 uni-app 项目中顺利地应用 ESLint、Prettier 和 Husky，确保代码质量和团队协作的高效性。</p><p><strong>参考配置</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/* eslint-env node */</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@rushstack/eslint-patch/modern-module-resolution&#39;</span><span class="token punctuation">)</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&#39;plugin:vue/vue3-essential&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;eslint:recommended&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;@vue/eslint-config-typescript&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;@vue/eslint-config-prettier&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 遇到的挑战2: ESLint、Prettier 存在冲突</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token comment">// 遇到的挑战1: 小程序全局变量</span>
  <span class="token literal-property property">globals</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">uni</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">wx</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">WechatMiniprogram</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">getCurrentPages</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">UniApp</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">UniHelper</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">parserOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">ecmaVersion</span><span class="token operator">:</span> <span class="token string">&#39;latest&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// 遇到的挑战2: ESLint、Prettier 存在冲突</span>
    <span class="token string-property property">&#39;prettier/prettier&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token string">&#39;warn&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">singleQuote</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">semi</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token literal-property property">printWidth</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
        <span class="token literal-property property">trailingComma</span><span class="token operator">:</span> <span class="token string">&#39;all&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">endOfLine</span><span class="token operator">:</span> <span class="token string">&#39;auto&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment">// 遇到的挑战3: 部分 ESLint 规则与项目需求不符</span>
    <span class="token string-property property">&#39;vue/multi-word-component-names&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;off&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;vue/no-setup-props-destructure&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;off&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;vue/no-deprecated-html-element-is&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;off&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;@typescript-eslint/no-unused-vars&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;off&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="问-请介绍-uni-app-中的条件编译和平台差异化处理" tabindex="-1"><a class="header-anchor" href="#问-请介绍-uni-app-中的条件编译和平台差异化处理" aria-hidden="true">#</a> 问：请介绍 uni-app 中的条件编译和平台差异化处理?</h2><h3 id="必答-10" tabindex="-1"><a class="header-anchor" href="#必答-10" aria-hidden="true">#</a> 必答</h3><p>(总)在 uni-app 开发过程中，由于需要适配多个平台，可能会遇到不同平台之间的差异和兼容性问题。为了解决这些问题，uni-app 提供了条件编译和平台差异化处理功能。</p><p>(分)</p><ol><li><strong>条件编译(常见)：</strong>，条件编译是在编译阶段根据预设条件对代码进行不同分支的编译。在 uni-app 中，可以通过条件编译实现针对不同平台编译不同的代码。 通过在代码中添加特定的注释来实现条件编译。例如：</li></ol><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// #ifdef H5</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;这段代码只编译到H5端&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// #endif</span>

<span class="token comment">// #ifdef MP-WEIXIN</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;这段代码只编译到微信小程序端&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// #endif</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><strong>平台差异化处理：</strong> 平台差异化处理是在运行时根据当前平台执行不同的代码逻辑。在 uni-app 中，可以通过 <code>const { osName } = uni.getSystemInfoSync()</code> 来判断当前平台，然后编写针对不同平台的代码逻辑。例如：</li></ol><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 获取系统名称</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> osName <span class="token punctuation">}</span> <span class="token operator">=</span> uni<span class="token punctuation">.</span><span class="token function">getSystemInfoSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>osName <span class="token operator">===</span> <span class="token string">&#39;ios&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;ios平台执行的逻辑&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>osName <span class="token operator">===</span> <span class="token string">&#39;android&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;android平台执行的逻辑&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>总结： 条件编译和平台差异化处理是 uni-app 为解决多平台兼容性问题提供的两种方法。条件编译更加常见，在编译阶段根据预设条件对代码进行不同分支的编译，而平台差异化处理是在运行时根据当前平台执行不同的代码逻辑。根据项目需求和场景，可以灵活选择使用这两种方法。</p><h3 id="加分-7" tabindex="-1"><a class="header-anchor" href="#加分-7" aria-hidden="true">#</a> 加分</h3><p>条件编译在 uni-app 中有很多应用场景，主要用于处理不同平台间的差异和兼容性问题。以下是一些常见的应用场景：</p><ol><li>登录功能差异：不同平台可能有不同的登录方式和 API。例如，微信小程序可以使用微信登录，而 H5 平台可能需要使用其他登录方式，如手机号+验证码。这种情况下，可以使用条件编译为不同平台提供适当的登录实现。</li></ol><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// #ifdef MP-WEIXIN</span>
<span class="token comment">// 微信小程序登录</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> code <span class="token punctuation">}</span> <span class="token operator">=</span> wx<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// #endif</span>

<span class="token comment">// #ifdef H5</span>
<span class="token comment">// H5平台登录，如手机号+验证码</span>
<span class="token comment">// ...</span>
<span class="token comment">// #endif</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>API 差异：不同平台可能存在 API 差异，有的 API 在某些平台上可能不可用。在这种情况下，可以使用条件编译来处理平台差异。</li></ol><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// #ifdef H5</span>
navigator<span class="token punctuation">.</span>geolocation<span class="token punctuation">.</span><span class="token function">getCurrentPosition</span><span class="token punctuation">(</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// H5获取地理位置</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// #endif</span>

<span class="token comment">// #ifdef MP-WEIXIN</span>
wx<span class="token punctuation">.</span><span class="token function">getLocation</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  type<span class="token operator">:</span> <span class="token string">&#39;wgs84&#39;</span><span class="token punctuation">,</span>
  <span class="token function">success</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 微信小程序获取地理位置</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// #endif</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>UI 组件差异：不同平台的 UI 组件可能存在差异，例如 导航栏、底部标签栏，微信小程序的<code>picker</code>组件和 H5 平台的<code>select</code>元素。可以使用条件编译针对不同平台提供不同的 UI 组件。</li></ol><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- #ifdef H5 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>option1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Option 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>option2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Option 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- #endif --&gt;</span>

  <span class="token comment">&lt;!-- #ifdef MP-WEIXIN --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>picker</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span>Option 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span>Option 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>picker</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- #endif --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>资源路径差异：有时，不同平台对资源路径的处理方式不同，可以使用条件编译为不同平台提供适当的资源路径。</li></ol><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- #ifdef H5 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">data-fancybox</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>gallery<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/static/img/logo.png<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token comment">&lt;!-- #endif --&gt;</span>

  <span class="token comment">&lt;!-- #ifdef MP-WEIXIN --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/static/img/logo-weixin.png<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token comment">&lt;!-- #endif --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>总之，条件编译在 uni-app 开发过程中具有广泛的应用场景，主要用于解决不同平台间的差异和兼容性问题。根据具体需求，可以灵活运用条件编译来实现适配不同平台的功能和表现。</p>`,36),_s=n("div",{class:"custom-container tip"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8h.01"}),n("path",{d:"M11 12h1v4h1"})])]),n("p",{class:"custom-container-title"},"类似问题"),n("p",null,"问：如何在 uni-app 的组件中实现跨平台逻辑？"),n("p",null,"问：如果区分 ios 端和 android 端执行不同的业务？")],-1);function qs(xs,Ss){const a=o("ExternalLinkIcon");return l(),c("div",null,[u,r,n("p",null,[s("其实 "),k,s(" 和 "),d,s(" 目前还没有 TS 官方支持，所以默认情况下组件是没有类型校验的，如果自己手写组件类型声明"),v,s("。基于这个问题，我们团队做过一些充分的调研，"),m,s(" 虽然是非官方组织，但这个第三方组织是 uni-app 生态类型声明文件做的非常好，更新频率也非常及时。其实在我们开发的过程中遇到些"),n("a",g,[s("小问题"),t(a)]),s("，我们在 "),n("a",h,[s("github"),t(a)]),s(" 仓库提的 "),n("a",b,[s("issue"),t(a)]),s(" 也有及时解决。最后，我们也保持关注官方文档和更新，确保项目的稳定性和兼容性。")]),f,n("ul",null,[n("li",null,[n("a",y,[s("uni-ui 组件库"),t(a)])]),n("li",null,[n("a",w,[s("uview-ui 组件库"),t(a)])]),n("li",null,[n("a",_,[s("vk-uview-ui 组件库-不更新"),t(a)])]),n("li",null,[n("a",q,[s("uni-helper 组织"),t(a)])]),n("li",null,[n("a",x,[s("uni-ui-types 类型声明"),t(a)])]),n("li",null,[n("a",S,[s("uni-helper 组织的 VS Code 插件-下载量 14k"),t(a)])]),n("li",null,[n("a",E,[s("uView，有计划支持 vue3.0 吗？"),t(a)])])]),A,P,n("p",null,[s("我对 Pinia 的了解是 Pinia 可以理解为就是 "),n("a",j,[s("Vuex5"),t(a)]),s("，是一个"),V,s("。Pinia 和 VueX 主要区别是"),C,s("经常被认为是"),H,s("，Pinia 主要包含以下几个核心概念：")]),B,I,T,L,n("p",null,[s("（分）我们用到了 "),n("a",M,[s("pinia-plugin-persistedstate"),t(a)]),s(" 插件实现持久化，周下载量 "),n("a",N,[s("61k"),t(a)]),s("，但是这个插件默认使用 "),n("a",D,[s("localStorage"),t(a)]),s(" 实现持久化，小程序端不兼容，所以必须修改一下配置，替换为 "),U,s(" 支持多端的持久化 API，也就是 "),R,s(" 和 "),O,s("。")]),z,n("ul",null,[n("li",null,[n("a",F,[s("Vuex 官方文档"),t(a)])]),n("li",null,[n("a",G,[s("Pinia 官方文档"),t(a)])]),n("li",null,[n("a",W,[s("Pinia 对比 Vuex 3.x/4.x 官方说明"),t(a)])]),n("li",null,[n("a",X,[s("pinia-plugin-persistedstate 插件的 storage 配置"),t(a)])])]),J,K,n("ul",null,[n("li",null,[n("a",Q,[s("uni-app 应用生命周期"),t(a)])]),n("li",null,[n("a",$,[s("uni-app 页面生命周期"),t(a)])]),n("li",null,[n("a",Y,[s("uni-app 组件生命周期"),t(a)])]),n("li",null,[n("a",Z,[s("WebAPI - visibilitychange 事件"),t(a)])])]),nn,sn,n("p",null,[n("a",an,[s("uni.request 网络请求"),t(a)])]),n("p",null,[n("a",tn,[s("uni.uploadFile 上传文件"),t(a)])]),n("p",null,[n("a",en,[s("uni.addInterceptor 拦截器"),t(a)])]),n("p",null,[n("a",pn,[s("拓展阅读 - uni 拦截器其他用法"),t(a)])]),on,n("ul",null,[n("li",null,[n("a",ln,[s("uni-helper 插件"),t(a)])]),n("li",null,[n("a",cn,[s("uni-create-view 插件"),t(a)])]),n("li",null,[n("a",un,[s("VSCode 开发 uni-app 教程-Vue2 版"),t(a)])])]),rn,kn,dn,n("ol",null,[vn,mn,n("li",null,[s("封装左上角返回按钮，通过 "),gn,s(" 获取路由栈，如果路由栈数组长度只有 1，通过 "),n("a",hn,[s("switchTab"),t(a)]),s(" 返回首页，其他情况应该是用 "),n("a",bn,[s("navigateBack"),t(a)]),s(" 返回上一页。")]),fn]),n("p",null,[s("如果自定义导航栏要求不高，其实也可以直接用 uni-ui 的 "),n("a",yn,[s("uni-nav-bar"),t(a)]),s(" ，或者从 "),n("a",wn,[s("插件市场"),t(a)]),s(" 中下载与项目要求接近的插件，再进行二次开发适配自己的项目。")]),_n,qn,n("p",null,[s("如果左侧按钮要对齐右侧的胶囊，还可以通过 "),n("a",xn,[s("wx.getMenuButtonBoundingClientRect"),t(a)]),s(" 获取胶囊信息实现对齐。")]),Sn,n("ul",null,[n("li",null,[n("a",En,[s("uni-nav-bar 自定义导航栏"),t(a)])]),n("li",null,[n("a",An,[s("插件市场 自定义导航栏"),t(a)])]),n("li",null,[n("a",Pn,[s("获取系统信息"),t(a)])]),n("li",null,[n("a",jn,[s("滚动驱动的动画"),t(a)])])]),Vn,Cn,Hn,Bn,n("ol",null,[In,n("li",null,[s("优化资源文件： "),n("ul",null,[Tn,n("li",null,[s("压缩图片：避免使用大图，对图片进行压缩，减少图片文件大小。（素材已压缩尺寸，"),n("a",Ln,[s("在线压缩图片"),t(a)]),s("）")]),Mn])]),Nn]),Dn,n("ul",null,[n("li",null,[n("a",Un,[s("uni-app 优化建议-官方整理"),t(a)])]),n("li",null,[n("a",Rn,[s("智能 WebP, PNG 和 JPEG 压缩"),t(a)])]),n("li",null,[n("a",On,[s("防抖的事件处理器 - Vue 官方文档"),t(a)])]),n("li",null,[n("a",zn,[s("创建一个防抖 ref - Vue 官方文档"),t(a)])]),n("li",null,[n("a",Fn,[s("lodash 防抖 debounce 函数用法"),t(a)])]),n("li",null,[n("a",Gn,[s("lodash 节流 throttle 函数用法"),t(a)])])]),Wn,Xn,n("p",null,[n("a",Jn,[s("普通 form 表单"),t(a)])]),n("p",null,[n("a",Kn,[s("uni-forms 表单校验"),t(a)])]),Qn,$n,Yn,Zn,ns,n("ol",null,[n("li",null,[s("vue 语法支持问题：uni-app 在发布到 H5 时支持所有 vue 的语法；发布到 App 和小程序时，由于平台限制，无法实现全部 vue 语法。相比 Web 平台， Vue.js 在 uni-app 中使用差异主要集中在两个方面： "),n("ul",null,[n("li",null,[s("新增：uni-app 除了支持 Vue 实例的组件生命周期，还拥有"),n("a",ss,[s("应用生命周期"),t(a)]),s("及"),n("a",as,[s("页面的生命周期"),t(a)]),s("。")]),n("li",null,[s("受限：相比 Web 平台，在小程序和 App 端部分功能支持不完善，具体见"),n("a",ts,[s("兼容性列表"),t(a)]),s("。")]),n("li",null,[s("如："),es,s("，可通过封装工具函数实现，"),n("a",ps,[s("参考方案"),t(a)]),s("。")])])]),os,n("li",null,[s("性能问题： 在 uni-app 开发过程中，可能会遇到页面性能问题，如加载速度慢等。为了解决这些问题，可以尝试以下方法： "),n("ul",null,[n("li",null,[s("减少本地图片资源，压缩图片，避免使用大图；（素材中已优化，"),n("a",ls,[s("在线压图工具"),t(a)]),s("）")]),cs,is])]),us,rs]),ks,ds,n("ul",null,[n("li",null,[n("a",vs,[s("uni-app H5 正常但小程序异常的可能性"),t(a)])]),n("li",null,[n("a",ms,[s("uni-app 区别于传统 web 开发的注意"),t(a)])]),n("li",null,[n("a",gs,[s("uni-app 跨端兼容"),t(a)])]),n("li",null,[n("a",hs,[s("uni-app 常见问题-官方整理"),t(a)])]),n("li",null,[n("a",bs,[s("uni-app 优化建议-官方整理"),t(a)])]),n("li",null,[n("a",fs,[s("uni-app 路由拦截方法使用"),t(a)])]),n("li",null,[n("a",ys,[s("智能 WebP, PNG 和 JPEG 压缩"),t(a)])])]),ws,_s])}const As=p(i,[["render",qs],["__file","14.html.vue"]]);export{As as default};
